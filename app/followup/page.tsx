"use client"
import { useState } from 'react';
import Navbar_user from "@/components/Navbar_user";
import { 
  LineChart, Line,PieChart, Pie, Cell, RadarChart, Radar, PolarGrid, PolarAngleAxis, PolarRadiusAxis,
  XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer 
} from 'recharts';

const PharmacistDashboard = () => {
  // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏≠‡∏ö
  const [examStats] = useState({
    totalExams: 156,
    passedExams: 132,
    failedExams: 24,
    averageScore: 68.5,
    lastExamScore: 72,
    improvementRate: 8.3,
    daysUntilExam: 45,
    studyHours: 234
  });

  // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á 6 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
  const scoreHistory = [
    { month: '‡∏°‡∏µ.‡∏Ñ.', score: 62, passing: 60 },
    { month: '‡πÄ‡∏°.‡∏¢.', score: 65, passing: 60 },
    { month: '‡∏û.‡∏Ñ.', score: 64, passing: 60 },
    { month: '‡∏°‡∏¥.‡∏¢.', score: 68, passing: 60 },
    { month: '‡∏Å.‡∏Ñ.', score: 70, passing: 60 },
    { month: '‡∏™.‡∏Ñ.', score: 72, passing: 60 },
  ];


  // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Radar Chart - ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏à‡∏∏‡∏î‡πÅ‡∏Ç‡πá‡∏á/‡∏à‡∏∏‡∏î‡∏≠‡πà‡∏≠‡∏ô
  const radarData = [
    { subject: '‡πÄ‡∏†‡∏™‡∏±‡∏ä‡πÄ‡∏Ñ‡∏°‡∏µ', score: 75, fullMark: 100 },
    { subject: '‡πÄ‡∏†‡∏™‡∏±‡∏ä‡∏Å‡∏£‡∏£‡∏°‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥', score: 68, fullMark: 100 },
    { subject: '‡πÄ‡∏†‡∏™‡∏±‡∏ä‡∏Å‡∏£‡∏£‡∏°‡∏Ñ‡∏•‡∏¥‡∏ô‡∏¥‡∏Å', score: 72, fullMark: 100 },
    { subject: '‡πÄ‡∏†‡∏™‡∏±‡∏ä‡∏Å‡∏£‡∏£‡∏°‡∏ä‡∏∏‡∏°‡∏ä‡∏ô', score: 65, fullMark: 100 },
    { subject: '‡πÄ‡∏†‡∏™‡∏±‡∏ä‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤', score: 70, fullMark: 100 },
    { subject: '‡∏Å‡∏é‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏†‡∏™‡∏±‡∏ä', score: 78, fullMark: 100 },
  ];

  // ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏Ç‡πâ‡∏≠‡∏™‡∏≠‡∏ö
  const examTypeData = [
    { name: '‡∏ú‡πà‡∏≤‡∏ô', value: examStats.passedExams, color: '#10b981' },
    { name: '‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô', value: examStats.failedExams, color: '#ef4444' },
  ];

  // ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏ó‡∏µ‡πà‡∏Ñ‡∏ß‡∏£‡∏ó‡∏ö‡∏ó‡∏ß‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° (‡∏à‡∏≤‡∏Å‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏ï‡πà‡∏≥)
  const weakTopics = [
    { 
      subject: '‡∏û‡∏§‡∏ï‡∏¥‡∏Å‡∏£‡∏£‡∏°‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û', 
      topic: '‡∏Å‡∏≤‡∏£‡∏™‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏£‡∏Å‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢',
      score: 62,
      priority: '‡∏™‡∏π‡∏á‡∏°‡∏≤‡∏Å',
      color: 'red',
      studyTime: '12 ‡∏ä‡∏°.',
      resources: 3
    },
    { 
      subject: '‡πÄ‡∏†‡∏™‡∏±‡∏ä‡∏Å‡∏£‡∏£‡∏°‡∏ä‡∏∏‡∏°‡∏ä‡∏ô', 
      topic: '‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏£‡πâ‡∏≤‡∏ô‡∏Ç‡∏≤‡∏¢‡∏¢‡∏≤',
      score: 65,
      priority: '‡∏™‡∏π‡∏á',
      color: 'orange',
      studyTime: '10 ‡∏ä‡∏°.',
      resources: 5
    },
    { 
      subject: '‡πÄ‡∏†‡∏™‡∏±‡∏ä‡∏Å‡∏£‡∏£‡∏°‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥', 
      topic: '‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏¢‡∏≤ IV admixture',
      score: 68,
      priority: '‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á',
      color: 'yellow',
      studyTime: '8 ‡∏ä‡∏°.',
      resources: 4
    },
    { 
      subject: '‡πÄ‡∏†‡∏™‡∏±‡∏ä‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤', 
      topic: '‡∏¢‡∏≤‡∏ï‡πâ‡∏≤‡∏ô‡∏à‡∏∏‡∏•‡∏ä‡∏µ‡∏û',
      score: 70,
      priority: '‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á',
      color: 'blue',
      studyTime: '6 ‡∏ä‡∏°.',
      resources: 6
    },
  ];

 


  return (
    <>
      <Navbar_user />
      
      <div className="min-h-screen bg-gray-50 p-3 sm:p-4 md:p-6">
        <div className="max-w-7xl mx-auto">
          
          {/* Header */}
          <div className="mb-6">
            <div className="flex items-center text-xs sm:text-sm text-gray-500 mb-2">
              <span className="hover:text-blue-600 cursor-pointer">‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å</span>
              <span className="mx-2">‚Ä∫</span>
              <span className="text-gray-700 font-medium">‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏∑‡∏ö‡∏´‡∏ô‡πâ‡∏≤</span>
            </div>
            <div className="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4">
              <div>
                <h1 className="text-2xl sm:text-3xl font-bold text-gray-800">
                  ‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏∑‡∏ö‡∏´‡∏ô‡πâ‡∏≤
                </h1>
                
              </div>
              <div className="bg-white rounded-xl shadow-lg px-6 py-4 text-center border-2 border-blue-500">
                <p className="text-sm text-gray-600">‡∏™‡∏≠‡∏ö‡∏≠‡∏µ‡∏Å</p>
                <p className="text-3xl font-bold text-blue-600">{examStats.daysUntilExam}</p>
                <p className="text-sm text-gray-600">‡∏ß‡∏±‡∏ô</p>
              </div>
            </div>
          </div>

          <div className="grid grid-cols-2 lg:grid-cols-4 gap-3 sm:gap-4 mb-6">
            {/* ‡∏Å‡∏≤‡∏£‡πå‡∏î 1 */}
            <div className="bg-white rounded-xl shadow-lg p-4 sm:p-6 border-l-4 border-blue-500 hover:shadow-xl transition-all hover:scale-105">
              <div className="flex items-center justify-between">
                <div>
                  <p className="text-xs sm:text-sm text-gray-600 mb-1">‡∏Ç‡πâ‡∏≠‡∏™‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡∏ó‡∏≥</p>
                  <p className="text-2xl sm:text-3xl font-bold text-gray-800">{examStats.totalExams}</p>
                  <p className="text-xs text-gray-500 mt-1">‡∏ä‡∏∏‡∏î</p>
                </div>
                <div className="bg-blue-100 p-3 rounded-full">
                  <svg className="w-6 h-6 sm:w-8 sm:h-8 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                  </svg>
                </div>
              </div>
            </div>

            {/* ‡∏Å‡∏≤‡∏£‡πå‡∏î 2 */}
            <div className="bg-white rounded-xl shadow-lg p-4 sm:p-6 border-l-4 border-green-500 hover:shadow-xl transition-all hover:scale-105">
              <div className="flex items-center justify-between">
                <div>
                  <p className="text-xs sm:text-sm text-gray-600 mb-1">‡∏ú‡πà‡∏≤‡∏ô‡πÄ‡∏Å‡∏ì‡∏ë‡πå</p>
                  <p className="text-2xl sm:text-3xl font-bold text-green-600">{examStats.passedExams}</p>
                  <p className="text-xs text-green-600 mt-1">
                    {((examStats.passedExams / examStats.totalExams) * 100).toFixed(1)}%
                  </p>
                </div>
                <div className="bg-green-100 p-3 rounded-full">
                  <svg className="w-6 h-6 sm:w-8 sm:h-8 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                  </svg>
                </div>
              </div>
            </div>

            {/* ‡∏Å‡∏≤‡∏£‡πå‡∏î 3 */}
            <div className="bg-white rounded-xl shadow-lg p-4 sm:p-6 border-l-4 border-yellow-500 hover:shadow-xl transition-all hover:scale-105">
              <div className="flex items-center justify-between">
                <div>
                  <p className="text-xs sm:text-sm text-gray-600 mb-1">‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢</p>
                  <p className="text-2xl sm:text-3xl font-bold text-yellow-600">{examStats.averageScore}</p>
                  <p className="text-xs text-gray-500 mt-1">/ 100 ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô</p>
                </div>
                <div className="bg-yellow-100 p-3 rounded-full">
                  <svg className="w-6 h-6 sm:w-8 sm:h-8 text-yellow-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z" />
                  </svg>
                </div>
              </div>
            </div>

            <div className="bg-white rounded-xl shadow-lg p-4 sm:p-6 border-l-4 border-purple-500 hover:shadow-xl transition-all hover:scale-105">
              <div className="flex items-center justify-between">
                <div>
                  <p className="text-xs sm:text-sm text-gray-600 mb-1">‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏Ç‡πâ‡∏≠‡∏™‡∏≠‡∏ö</p>
                  <p className="text-2xl sm:text-3xl font-bold text-purple-600">{examStats.studyHours}</p>
                  <p className="text-xs text-purple-600 mt-1">‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á</p>
                </div>
                <div className="bg-purple-100 p-3 rounded-full">
                  <svg className="w-6 h-6 sm:w-8 sm:h-8 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
                  </svg>
                </div>
              </div>
            </div>
          </div>

          {/* Charts Section - Row 1 */}
          <div className="grid grid-cols-1 lg:grid-cols-3 gap-4 sm:gap-6 mb-6">
            {/* ‡∏Å‡∏£‡∏≤‡∏ü‡πÄ‡∏™‡πâ‡∏ô - ‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏Å‡∏≤‡∏£‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô */}
            <div className="lg:col-span-2 bg-white rounded-xl shadow-lg p-4 sm:p-6">
              <h2 className="text-lg sm:text-xl font-bold text-gray-800 mb-4 flex items-center">
                <span className="mr-2">üìà</span> ‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏Å‡∏≤‡∏£‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô 6 ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
              </h2>
              <ResponsiveContainer width="100%" height={300}>
                <LineChart data={scoreHistory}>
                  <CartesianGrid strokeDasharray="3 3" />
                  <XAxis dataKey="month" tick={{ fontSize: 12 }} />
                  <YAxis tick={{ fontSize: 12 }} domain={[0, 100]} />
                  <Tooltip />
                  <Legend />
                  <Line type="monotone" dataKey="passing" stroke="#ef4444" strokeWidth={2} strokeDasharray="5 5" name="‡πÄ‡∏Å‡∏ì‡∏ë‡πå‡∏ú‡πà‡∏≤‡∏ô (60%)" />
                  <Line type="monotone" dataKey="score" stroke="#3b82f6" strokeWidth={3} name="‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì" />
                </LineChart>
              </ResponsiveContainer>
            </div>

            {/* ‡∏Å‡∏£‡∏≤‡∏ü‡∏ß‡∏á‡∏Å‡∏•‡∏° - ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏ú‡πà‡∏≤‡∏ô/‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô */}
            <div className="bg-white rounded-xl shadow-lg p-4 sm:p-6">
              <h2 className="text-lg sm:text-xl font-bold text-gray-800 mb-4 flex items-center">
                <span className="mr-2"></span> ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏≠‡∏ö
              </h2>
              <ResponsiveContainer width="100%" height={250}>
                <PieChart>
                  <Pie
                    data={examTypeData}
                    cx="50%"
                    cy="50%"
                    labelLine={false}
                    label={({ name, percent }) => `${name}\n${(percent * 100).toFixed(0)}%`}
                    outerRadius={80}
                    fill="#8884d8"
                    dataKey="value"
                  >
                    {examTypeData.map((entry, index) => (
                      <Cell key={`cell-${index}`} fill={entry.color} />
                    ))}
                  </Pie>
                  <Tooltip />
                </PieChart>
              </ResponsiveContainer>
              <div className="mt-4 text-center">
                <p className="text-sm text-gray-600">‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏Å‡∏≤‡∏£‡∏ú‡πà‡∏≤‡∏ô</p>
                <p className="text-2xl font-bold text-green-600">
                  {((examStats.passedExams / examStats.totalExams) * 100).toFixed(1)}%
                </p>
              </div>
            </div>
          </div>

          <div className="grid grid-cols-1 lg:grid-cols-2 gap-4 sm:gap-6 mb-6">
         

            <div className="bg-white rounded-xl shadow-lg p-4 sm:p-6">
              <h2 className="text-lg sm:text-xl font-bold text-gray-800 mb-4 flex items-center">
                <span className="mr-2"></span> ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏à‡∏∏‡∏î‡πÅ‡∏Ç‡πá‡∏á ‡πÅ‡∏•‡∏∞ ‡∏à‡∏∏‡∏î‡∏≠‡πà‡∏≠‡∏ô
              </h2>
              <ResponsiveContainer width="100%" height={350}>
                <RadarChart data={radarData}>
                  <PolarGrid />
                  <PolarAngleAxis dataKey="subject" tick={{ fontSize: 10 }} />
                  <PolarRadiusAxis angle={90} domain={[0, 100]} tick={{ fontSize: 10 }} />
                  <Radar name="‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì" dataKey="score" stroke="#3b82f6" fill="#3b82f6" fillOpacity={0.6} />
                  <Tooltip />
                  <Legend />
                </RadarChart>
              </ResponsiveContainer>
            </div>

             <div className="bg-white rounded-xl shadow-lg p-4 sm:p-6">
              <h2 className="text-lg sm:text-xl font-bold text-gray-800 mb-4 flex items-center">
                ‡∏Ñ‡∏ß‡∏£‡∏ó‡∏ö‡∏ó‡∏ß‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
              </h2>
              <div className="space-y-3">
                {weakTopics.map((topic, index) => (
                  <div 
                    key={index}
                    className={`p-4 rounded-lg border-l-4 transition-all hover:shadow-md ${
                      topic.priority === '‡∏™‡∏π‡∏á‡∏°‡∏≤‡∏Å' 
                        ? 'bg-red-50 border-red-500' 
                        : topic.priority === '‡∏™‡∏π‡∏á' 
                        ? 'bg-orange-50 border-orange-500'
                        : topic.priority === '‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á' 
                        ? 'bg-yellow-50 border-yellow-500' 
                        : 'bg-blue-50 border-blue-500'
                    }`}
                  >
                    <div className="flex items-start justify-between">
                      <div className="flex-1">
                        <div className="flex items-center gap-2 mb-1">
                          <h3 className="font-bold text-gray-800 text-sm sm:text-base">{topic.topic}</h3>
                          <span className={`text-xs px-2 py-0.5 rounded-full font-medium ${
                            topic.priority === '‡∏™‡∏π‡∏á‡∏°‡∏≤‡∏Å' 
                              ? 'bg-red-200 text-red-700' 
                              : topic.priority === '‡∏™‡∏π‡∏á' 
                              ? 'bg-orange-200 text-orange-700'
                              : topic.priority === '‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á' 
                              ? 'bg-yellow-200 text-yellow-700' 
                              : 'bg-blue-200 text-blue-700'
                          }`}>
                            {topic.priority}
                          </span>
                        </div>
                        <p className="text-xs sm:text-sm text-gray-600">{topic.subject}</p>
                        <div className="flex items-center gap-3 mt-2 flex-wrap">
                          <span className="text-xs text-gray-500">
                            ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô: {topic.score}
                          </span>
                          <span className="text-xs text-gray-500">
                            ‚è±‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥: {topic.studyTime}
                          </span>
                          <span className="text-xs text-gray-500">
                            ‡πÅ‡∏´‡∏•‡πà‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ: {topic.resources} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
                          </span>
                        </div>
                      </div>
                      
                    </div>
                  </div>
                ))}
              </div>
            </div>
          </div>

          {/* Recommended Topics & Recent Activities */}
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-4 sm:gap-6 mb-6">
            {/* ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏ó‡∏µ‡πà‡∏Ñ‡∏ß‡∏£‡∏ó‡∏ö‡∏ó‡∏ß‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° */}
           

          </div>


        </div>
      </div>
    </>
  );
};

export default PharmacistDashboard;